{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsListItem/ContactsListItem.module.css","components/ContactsList/ContactsList.module.css","App.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactsListItem/ContactsListItem.js","components/ContactsList/ContactsList.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","getFilter","state","contacts","filter","getContacts","items","getFilteredContacts","normalizedFilter","toLowerCase","contact","includes","ContactForm","useState","setName","setNumber","useSelector","dispatch","useDispatch","nameInputId","numberInputId","resetForm","position","toastOptions","duration","className","styles","form","onSubmit","event","preventDefault","find","toast","error","trim","contactsActions","onAdd","formLabel","htmlFor","type","value","formInput","onChange","currentTarget","submitBtn","Filter","filterContainer","label","input","target","ContactsListItem","onDeleteContact","contactItem","deleteBtn","onClick","ContactsList","contactList","map","AppRedux","container","itemsReducer","createReducer","actions","filterReducer","combineReducers","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","contactsReducer","middleware","logger","devTools","process","persistor","persistStore","console","log","ReactDOM","render","StrictMode","loading","App","document","getElementById"],"mappings":"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","file":"static/js/main.843d212c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"Filter_filterContainer__2eDOn\",\"label\":\"Filter_label__3DcZT\",\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactsListItem_contactItem__8l6kJ\",\"deleteBtn\":\"ContactsListItem_deleteBtn__1sLou\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactsList_contactList__-3u15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\"};","import { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/Add', (name, number) => ({\n    payload: {\n        id: uuidv4(),\n        name,\n        number,\n    },\n}));\n\nconst deleteContact = createAction('contacts/Delete');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport default { addContact, deleteContact, changeFilter };","export const getFilter = state => state.contacts.filter;\n\nexport const getContacts = state => state.contacts.items;\n\nexport const getFilteredContacts = state => {\n    const contacts = getContacts(state);\n    const filter = getFilter(state);\n    \n    const normalizedFilter = filter.toLowerCase();\n    \n    return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter),\n    )\n};","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport toast, { Toaster } from 'react-hot-toast';\nimport styles from 'components/ContactForm/ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from 'redux/contacts/contacts-actions';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const nameInputId = uuidv4();\n  const numberInputId = uuidv4();\n\n  const onAdd = (name, number) => dispatch(contactsActions.addContact(name, number));\n\n  const handleNameChange = event => {\n    const { value } = event.currentTarget;\n    setName(value);\n  }\n\n  const handleNumberChange = event => {\n    const { value } = event.currentTarget;\n    setNumber(value);\n  }\n  \n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )) {\n      toast.error(`${name} is already in contacts.`);\n    }\n    else if (name.trim() === '' || number.trim() === '') {\n      toast.error('Please enter at least some data');\n    }\n    else {\n      onAdd(name, number);\n    }\n    \n    resetForm();\n  };\n  \n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <Toaster position=\"top-right\" toastOptions={{ duration: 2000 }} />\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <label className={styles.formLabel} htmlFor={nameInputId}>\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id={nameInputId}\n          value={name}\n          className={styles.formInput}\n          onChange={handleNameChange}\n        />\n\n        <label className={styles.formLabel} htmlFor={nameInputId}>\n          Number\n        </label>\n        <input\n          type=\"text\"\n          name=\"number\"\n          id={numberInputId}\n          value={number}\n          className={styles.formInput}\n          onChange={handleNumberChange}\n        />\n\n        <button type=\"submit\" className={styles.submitBtn}>\n          Add contact\n        </button>\n      </form>\n    </>\n  );\n};","import { v4 as uuidv4 } from 'uuid';\nimport styles from 'components/Filter/Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport contactsActions from 'redux/contacts/contacts-actions';\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\n\n\nexport default function Filter() {\n  const id = uuidv4();\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const onChange = (event) => dispatch(contactsActions.changeFilter(event.target.value));\n\n  return (\n    <div className={styles.filterContainer}>\n      <label className={styles.label} htmlFor={id}>\n        Find contacts by name\n      </label>\n      <input\n        type=\"text\"\n        id={id}\n        value={value}\n        className={styles.input}\n        onChange={onChange}\n      />\n    </div>\n  );\n};","import PropTypes from 'prop-types';\nimport styles from 'components/ContactsListItem/ContactsListItem.module.css';\n\nexport default function ContactsListItem({\n  id,\n  name,\n  number,\n  onDeleteContact,\n}) {\n  return (\n    <li className={styles.contactItem}>\n      {name}: {number}\n      <button className={styles.deleteBtn} onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport ContactsListItem from 'components/ContactsListItem/';\nimport styles from 'components/ContactsList/ContactsList.module.css';\nimport contactsActions from 'redux/contacts/contacts-actions';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nexport default function ContactsList() {\n  const contacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = (id) => dispatch(contactsActions.deleteContact(id))\n\n  return (\n    <ul className={styles.contactList}>\n      {contacts.map(contact => (\n        <ContactsListItem\n          key={contact.id}\n          id={contact.id}\n          name={contact.name}\n          number={contact.number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};","import ContactForm from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactsList from 'components/ContactsList';\nimport styles from 'App.module.css';\n\nfunction AppRedux() {\n  return (\n    <div className={styles.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  ); \n};\n\nexport default AppRedux;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nconst initialItems = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst itemsReducer = createReducer(initialItems, {\n    [actions.addContact]: (state, { payload }) => [payload, ...state],\n    [actions.deleteContact]: (state, { payload }) => state.filter(contact => contact.id !== payload),\n});\n\nconst filterReducer = createReducer('', {\n    [actions.changeFilter]: (state, {payload}) => payload,\n});\n\nexport default combineReducers({\n    items: itemsReducer,\n    filter: filterReducer,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\n\nconst contactsPersistConfig = {\n    key: 'contacts',\n    storage,\n    blacklist: ['filter'],\n};\n\nconst store = configureStore({\n    reducer: {\n        contacts: persistReducer(contactsPersistConfig, contactsReducer),\n    },\n    middleware: [logger],\n    devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\nimport store from './redux/store';\n\nconsole.log(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={'Loading data...'} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"formLabel\":\"ContactForm_formLabel__1hDC-\",\"formInput\":\"ContactForm_formInput__1r2bF\",\"submitBtn\":\"ContactForm_submitBtn__J-Qu6\"};"],"sourceRoot":""}